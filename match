<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Drag-and-Drop Match Up Game</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="game-container">
    <h2>Drag and Drop Match Up</h2>
    <div class="match-items">
      <div class="drag-items">
        <div class="drag-item" draggable="true" data-match="1">Apple</div>
        <div class="drag-item" draggable="true" data-match="2">Banana</div>
        <div class="drag-item" draggable="true" data-match="3">Cherry</div>
      </div>
      <div class="drop-items">
        <div class="drop-item" data-match="1">üçé</div>
        <div class="drop-item" data-match="2">üçå</div>
        <div class="drop-item" data-match="3">üçí</div>
      </div>
    </div>
    <div id="result"></div>
  </div>

  <script src="script.js"></script>
</body>
</html>

body {
  font-family: Arial, sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  background-color: #f0f4f8;
}

.game-container {
  text-align: center;
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  width: 300px;
}

h2 {
  font-size: 24px;
  color: #333;
}

.match-items {
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}

.drag-items, .drop-items {
  display: flex;
  flex-direction: column;
}

.drag-item, .drop-item {
  padding: 10px;
  margin: 10px;
  background-color: #e1ecf4;
  border-radius: 5px;
  cursor: grab;
  font-size: 18px;
}

.drag-item:hover {
  background-color: #b0d6f0;
}

.drop-item {
  background-color: #f0d6f6;
  font-size: 24px;
}

.dragging {
  opacity: 0.5;
}

const dragItems = document.querySelectorAll('.drag-item');
const dropItems = document.querySelectorAll('.drop-item');
let draggedItem = null;

// Add dragstart and dragend event listeners
dragItems.forEach(item => {
  item.addEventListener('dragstart', () => {
    draggedItem = item;
    item.classList.add('dragging');
  });

  item.addEventListener('dragend', () => {
    draggedItem = null;
    item.classList.remove('dragging');
  });
});

// Add dragover and drop event listeners for drop targets
dropItems.forEach(item => {
  item.addEventListener('dragover', (e) => {
    e.preventDefault();
  });

  item.addEventListener('drop', () => {
    if (draggedItem && draggedItem.dataset.match === item.dataset.match) {
      item.textContent = draggedItem.textContent;
      draggedItem.remove();
      checkMatch();
    }
  });
});

// Check if all matches are done
function checkMatch() {
  const remainingItems = document.querySelectorAll('.drag-item');
  if (remainingItems.length === 0) {
    document.getElementById('result').textContent = 'All items matched!';
  }
}
